/**
 * Клас InputManager здійснює керування введенням чисел з боку користувача та забезпечує їх переведення до типу double для
 * виконання подальших дій. Основним призначенням класу є валідація даних, введених користувачем
 */
class InputManager
 {
private:
	double firstNum;
	double secondNum;

  /*
  public:
    /**
     * Перший операнд (для бінарних операцій)
     */
    //double f_num;
    
    /**
     * Другий операнд (для бінарних операцій)
     */
    //double s_num;


    /**
     * Конструктор класу InputManager за замовчуванням. Створює об'єкт класу та ініціалізовує значення першого та другого операнда як нулі.
     */
    InputManager()
    {
     firstNum = 0;
     secondNum = 0;
    }

   /**
    * Метод validate здійснює перевірку на правильність введеного користувачем числа.
    * @param  num Символьний рядок, утворений із цифр та (або) знака розділення цілої та дробової частини.
    * Отримується із головного поля для введення калькулятора. У випадку неможливості перевести символьний рядок у дійсне число генерується
    * виключна ситуація та виводиться відповідне повідомлення.
    * @return     true, якщо символьний рядок є правлильним представленням дійсного числа
    * @return     false, якщо заданий символьний рядок містить недопустимі символи, є порожнім, а тому не є числом
    */
   bool validate(String num)
        {
        try {
         StrToFloat(num);
         }
         catch (Exception *ex){
          ShowMessage("Помилка введення");
          clean();
          return false;
         }
          firstNum = StrToFloat(Form1->Edit1->Text);
          return true;
        }

    /**
     * Метод clean() здійснює очищення поля калькулятора для введення числа
     */
    void clean()
    {
     Form1->Edit1->Text = "";
    }
};
